---
const { data, num } = Astro.props;
const boxes = [...Array(data.boxes)]
const { customClass } = data
---

<section class={customClass || null}>
        <h2 class="small-label">Ã˜velse {num}</h2>

        <article class="exercise-details">
          <img loading="lazy" src={data.image} alt={data.title}>
          <div class="exercise-content">
            <h3>{data.title}</h3>

            {data.astro.html}

            <details>
                <summary>Hints</summary>
                <ul class="hints">
                    {data.hints.map(hint=>{
                        return <li data-type={hint.type}><code>{hint.name}</code> ({hint.type})</li>      
                    })}
                </ul>
            </details>
          </div>
        </article>

        
        {data.canAddBoxes && (
            <div class="controls">
                <div>
                <button type="button" class="plus">Add box</button>
                <button type="button" class="minus">Remove box</button>
                </div>
            </div>
        )}

        <article class="output">
          <div class="container">
              {boxes.map((_,index)=><div class={`box box-${index+1}`} contenteditable></div>)}
          </div>
        </article>

        <div class="editor">
          <button class="reset">
            <span class="visually-hidden">Reset</span>
            <svg aria-hidden="true" width="15" height="15">
              <use href="#reset-icon"></use>
            </svg>
          </button>
          <textarea autocorrect="off" autocomplete="off" spellcheck="false" autocapitalize="off" class="prism-live language-css">{data.startingCSS.trim()}</textarea>
          <style class="style"></style>
        </div>
      </section>